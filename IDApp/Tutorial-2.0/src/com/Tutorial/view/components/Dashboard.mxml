<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%"
		 backgroundAlpha="0"
		 >
	<!--backgroundColor="0x888888"-->
	<fx:Script>
		<![CDATA[
			import com.Tutorial.ApplicationFacade;
			import com.Tutorial.business.NativeCommunicator;
			import com.Tutorial.business.TutConstants;
			import com.Tutorial.model.PackageProxy;
			import com.Tutorial.model.objects.Package;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			
			[Bindable]
			public static var listHorizontalColumnCount:int = 2;
			
/* 			[Bindable]
			private var arr:Array = new Array(
				{title:"Maths", description:"testMaths", mainIconPath:"assets/icons/temp.png"},
				{title:"Science", description:"testScience", mainIconPath:"assets/icons/temp.png"},
				{title:"Social Science", description:"testSocialScience", mainIconPath:"assets/icons/temp.png"},
				{title:"General Knowledge", description:"testGeneralKnowledge", mainIconPath:"assets/icons/temp.png"}
			);
			
			private var tttt:ArrayCollection = new ArrayCollection(
				new Array(
					{title:"Maths", description:"testMaths", mainIconPath:"assets/icons/temp.png"},
					{title:"Science", description:"testScience", mainIconPath:"assets/icons/temp.png"},
					{title:"Social Science", description:"testSocialScience", mainIconPath:"assets/icons/temp.png"},
					{title:"General Knowledge", description:"testGeneralKnowledge", mainIconPath:"assets/icons/temp.png"}
				)
			); */
			
			[Bindable]
			public var pkgColl:ArrayCollection;
			
			protected function tileComponent_clickHandler(event:MouseEvent):void
			{
				if(tileComponent.selectedItem == null)
					return;
				
				ApplicationFacade.getInstance().sendNotification(TutConstants.N_CREATENAVPANEL);
				ApplicationFacade.getInstance().sendNotification(TutConstants.N_SETNAVPANELVISIBILITY, "true");
				
				//1. start session based on the content user selected
				//2. make a call to get session data
				var proxy:PackageProxy = ApplicationFacade.getInstance().retrieveProxy(PackageProxy.NAME) as PackageProxy;
				var pkg:com.Tutorial.model.objects.Package = proxy.getPkgOfSession(tileComponent.selectedItem.pkgID);
				
				if(!pkg.bAlreadyPopulated)
					NativeCommunicator.instance.startSession(tileComponent.selectedItem.pkgID);
				else
				{
					ApplicationFacade.getInstance().sendNotification(TutConstants.N_PARAMSCONFIGURED, tileComponent.selectedItem.pkgID);
				}
			}


			protected function leftBtn_clickHandler(event:MouseEvent):void
			{
				var pos:int = tileComponent.horizontalScrollPosition-1;
				var min:int = 0;
				var value:int = Math.max(min, pos);
				tileComponent.horizontalScrollPosition = value;
				
				if(value == 0)
					leftBtn.enabled = false;
				else
					leftBtn.enabled = true;
				
				//if(pkgColl.length >= listHorizontalColumnCount)
					rightBtn.enabled = true;
				
				/*
				// TODO Auto-generated method stub
				var n:int = tileComponent.horizontalScrollPosition;
				var imgWid:int = tileComponent.width/2;
				
				tileComponent.horizontalScrollPosition = (n % imgWid) - 1 >= 0 ? ((n % imgWid) - 1) * imgWid : 0;
				*/
			}


			protected function rightBtn_clickHandler(event:MouseEvent):void
			{
				var pos:int = tileComponent.horizontalScrollPosition+1;
				var max:int = tileComponent.maxHorizontalScrollPosition;
				var value:int = Math.min(pos, max);
				tileComponent.horizontalScrollPosition = value;
				
				if(value == max)
					rightBtn.enabled = false;
				else
					rightBtn.enabled = true;
				
				//if(max >= pkgColl.length)
					leftBtn.enabled = true;
				/*
				// TODO Auto-generated method stub
				var n:int = tileComponent.horizontalScrollPosition;
				var imgWid:int = tileComponent.width/2;
				
				tileComponent.horizontalScrollPosition = (n % imgWid) + 1 < pkgColl.length - 1 ? ((n % imgWid) + 1)*imgWid : (pkgColl.length - 1) * imgWid;
				*/
			}


			protected function leftBtn_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(leftBtn.enabled)
					leftBtn.source = "/assets/icons/leftarrow-32_hover.png";
			}


			protected function leftBtn_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				leftBtn.source = "/assets/icons/leftarrow-32.png";
			}


			protected function rightBtn_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(rightBtn.enabled)
					rightBtn.source = "/assets/icons/rightarrow-32_hover.png";
			}


			protected function rightBtn_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				rightBtn.source = "/assets/icons/rightarrow-32.png";
			}

		]]>
	</fx:Script>

	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
<!--		<s:TileLayout id="tileLayout" columnAlign="justifyUsingGap" horizontalGap="20" verticalGap="20"/>-->
	</fx:Declarations>
	
	<mx:VBox width="100%" height="100%">
		<mx:Spacer height="10%"/>
		<mx:HBox width="100%" height="100%">
			<mx:Spacer width="10%"/>
			<!--<mx:TileList width="100%" height="100%" id="tileComponent"
						 borderVisible="false"
						 contentBackgroundAlpha="0"
						 columnCount="2"
						 dataProvider="{pkgColl}"
						 rowHeight="100"
						 itemRenderer="com.Tutorial.view.components.renderers.courseLayoutIRenderer"
						 click="tileComponent_clickHandler(event)"
						 
						 />-->
			
			<mx:VBox height="100%">
				<mx:Spacer height="100%"/>
				<mx:Image id="leftBtn" click="leftBtn_clickHandler(event)"
						  source="/assets/icons/leftarrow-32.png"
						  mouseOver="leftBtn_mouseOverHandler(event)"
						  mouseOut="leftBtn_mouseOutHandler(event)"
						  enabled="false"						  
						  />
				<mx:Spacer height="100%"/>
			</mx:VBox>
			<mx:HorizontalList width="100%" height="100%" id="tileComponent"
						dataProvider="{pkgColl}"
						itemRenderer="com.Tutorial.view.components.renderers.courseLayoutIRenderer"
						click="tileComponent_clickHandler(event)"
						borderStyle="none" columnCount="{listHorizontalColumnCount}"
						horizontalScrollPolicy="off"
					/>
			<mx:VBox height="100%">
				<mx:Spacer height="100%"/>
				<mx:Image id="rightBtn" click="rightBtn_clickHandler(event)"
						  source="/assets/icons/rightarrow-32.png"
						  mouseOver="rightBtn_mouseOverHandler(event)"
						  mouseOut="rightBtn_mouseOutHandler(event)"
						  />
				<mx:Spacer height="100%"/>
			</mx:VBox>
			
			<!--borderStyle="none" backgroundAlpha="0" 
			selectable="false" useRollOver="false"
			itemRenderer="com.adobe.UWAFlex.view.components.renderers.AffectedChannelItemRenderer" 
			columnWidth="20" rowHeight="20" maxColumnsOnScreen="12" height="22"-->
						
			<!--chromeColor="0x303030"
			color="0x303030"-->
			<mx:Spacer width="10%"/>
		</mx:HBox>
		<mx:Spacer height="10%"/>
	</mx:VBox>
	
</mx:VBox>
