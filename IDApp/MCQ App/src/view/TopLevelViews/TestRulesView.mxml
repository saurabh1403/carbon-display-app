<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   width="100%" height="100%" backgroundColor="#515050" borderWeight="6"
				   chromeColor="#E46C6C" contentBackgroundColor="#A9A4A4"
				   creationComplete="bordercontainer1_initializeHandler(event)"
				   creationPolicy="all">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import Controller.DataProcessor;
			import Controller.MCQConstants;
			
			import model.QuestionsProxy;
			
			import mx.events.FlexEvent;
			
			public function pickTest(testNumber:int):void
			{
				
			}
			
			public function resetView():void
			{
				var quesProxy:QuestionsProxy = DataProcessor.instance.quesProxy;
				
				testInstructions.text = "1. All questions are compulsory.\n\n" +
					"2. This paper consists of " + quesProxy.totalQuestions.toString() + " questions\n\n" +
					"3. No questions will be allowed after the time out.\n";
				
				
				timeLabel.text = "Total Time : " + quesProxy.testTotalTime.toString();
				marksLabel.text = "Total Marks : " + quesProxy.testTotalMarks.toString();
				
				subjectLabel.text = quesProxy.testSubjectName;
				testLabel.text = quesProxy.testTitle;

			}
			
			protected function bordercontainer1_initializeHandler(event:FlexEvent):void
			{
				resetView();
			}
			
			
			protected function testStartClicked(event:Event):void
			{
				var newEvent:Event = new Event(MCQConstants.testViewStartEventName);
				dispatchEvent(newEvent);

			}
			
			public function disposeView():void
			{
				
			}

			
			protected function testQuitClicked(event:Event):void
			{
				var newEvent:Event = new Event(MCQConstants.testQuitEventName);
				dispatchEvent(newEvent);
			}
												
			
		]]>
	</fx:Script>
	
	<s:Panel width="75%" height="65%" backgroundAlpha="1.0" backgroundColor="#656161"
			 borderColor="#6A6464" borderVisible="true" chromeColor="#6C6B6B"
			 contentBackgroundAlpha="1.0" contentBackgroundColor="#646060" cornerRadius="19"
			 dropShadowVisible="true" horizontalCenter="0" verticalCenter="0">
		<s:Button bottom="30" width="40" height="40" label="Start" click="testStartClicked(event)"
				  color="#DF5050" fontFamily="Verdana" fontSize="23" fontStyle="italic"
				  fontWeight="bold" horizontalCenter="-50" icon="@Embed('assets/Ok-icon.png')"
				  skinClass="skins.ButtonSelectSkin" textDecoration="none"/>
		<s:Button bottom="30" width="40" height="40" label="Quit" click="testQuitClicked(event)"
				  color="#DF5050" fontFamily="Verdana" fontSize="23" fontStyle="italic"
				  fontWeight="bold" horizontalCenter="50" icon="@Embed('assets/Quit-icon.png')"
				  textDecoration="none"/>
		<s:Label id="timeLabel" left="30" top="10" width="119" height="22" color="#FDFBFB" fontSize="12"
				 fontWeight="bold" textAlign="left"
				 verticalAlign="middle"/>
		<s:Label id="marksLabel" right="30" top="10" width="119" height="22" color="#FDFBFB" fontSize="12"
				 fontWeight="bold" textAlign="left"
				 verticalAlign="middle"/>
		<s:Label id="subjectLabel" y="-26" width="243" height="23" color="#FDFDFD" fontSize="14"
				 fontStyle="italic" fontWeight="bold" horizontalCenter="-1" textAlign="center"
				 verticalAlign="middle"/>
		<s:Label id="testLabel" top="10" width="243" height="23" color="#FDFDFD" fontSize="14"
				 fontStyle="italic" fontWeight="bold" horizontalCenter="-1" textAlign="center"
				 verticalAlign="middle"/>

		<s:RichText id="testInstructions" left="30" top="60" width="532" height="60%" color="#D8D7D7" fontSize="14"
					fontStyle="italic" textAlign="left"/>
	</s:Panel>
</s:BorderContainer>
