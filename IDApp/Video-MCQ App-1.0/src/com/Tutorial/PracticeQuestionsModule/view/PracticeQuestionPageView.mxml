<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%"
		 click="{dispatchEvent(new Event(clickEventName))}"
		 creationComplete="onPageCreationComplete(event)"
		 borderVisible="false"
		 backgroundAlpha="0"
		 contentBackgroundAlpha="0"
		 stateChangeComplete="onStateChange(event)">

<!--	<fx:Style source="com/Tutorial/CommonUtil/styles/CommonStyles.css">
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
	</fx:Style>-->

	<fx:Metadata>
		[Event(name="itemClicked", type="flash.events.Event")]
		
	</fx:Metadata>

	<fx:Declarations>
		<s:Fade id="fadeEffectOut" alphaFrom="1" alphaTo="0"
				duration="600"
				repeatCount="1" repeatBehavior="reverse" />
		
		<s:Fade id="fadeEffectIn" alphaFrom="0" alphaTo="1"
				duration="800"
				repeatCount="1" repeatBehavior="reverse" />
		
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.events.StateChangeEvent;
			
			[Bindable]
			public var isanswerVisible:Boolean = false;;
			
			[Bindable]
			public var isExpanded:Boolean = false;
			
			[Bindable]
			public var labelText:String = "short Answers Questions";
			
			public const clickEventName:String = "itemClicked";
			
			[Bindable]
			public var moduleDescription:String = "";
			
			[Bindable]
			public var initialX:int = 0;

			[Bindable]
			public var initialY:int = 0;
			
			[Bindable]
			public var quesHtml:String = "";
			
			[Bindable]
			public var ansHtml:String = "";
			
			protected function onPageCreationComplete(event:FlexEvent):void
			{
			}
			
			protected function onStateChange(event:FlexEvent):void
			{
				if(currentState == "Enlarged")
				{
					htmlQuestions.htmlLoader.paintsDefaultBackground = false;
					htmlAnswers.htmlLoader.paintsDefaultBackground = false;
					this.removeEventListener(StateChangeEvent.CURRENT_STATE_CHANGE, onStateChange);
				}
				
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="Collapsed"/>
		<s:State name="Enlarged"/>
	</s:states>
	
	<s:Image 
		id="bgImage"
		left="0"
		right="10"
		height="100%"
		smooth="true"
		smoothingQuality="high"
		scaleMode="stretch"
		showEffect="{fadeEffectIn}"
		hideEffect="{fadeEffectOut}"
		includeIn="Collapsed"
		source="@Embed('assets/assetsPracticeQuestions/bgBlue.png')"
		/>
	
	<s:Image
		id="bc"
		width="100%"
		height="100%"
		showEffect="{fadeEffectIn}"
		source="@Embed('assets/assetsPracticeQuestions/htmlbg2.png')"
		hideEffect="{fadeEffectOut}"
		scaleMode="stretch"
		includeIn="Enlarged"
		/>

	<s:RichText id="bgText" width="100%" height="100%" color="#8C44B2"
				fontSize="16" fontStyle="italic"
				top="5"
				right="20"
				left="5"
				bottom="5"
				visible="{!isExpanded}"
				includeInLayout="{!isExpanded}"
				showEffect="{fadeEffectIn}" text="{labelText}"
				textAlign="center" verticalAlign="middle"/>
	

	<s:Image
		id="infoIcon"
		right="15"
		width="20"
		height="20"
		smooth="true"
		toolTip="{moduleDescription}"
		source="@Embed('assets/assetsPracticeQuestions/info.png')"
		scaleMode="stretch"
		alpha="0.8"
		includeIn="Collapsed"
		/>
	
		<mx:HTML id="htmlQuestions" visible="{isExpanded &amp;&amp; !isanswerVisible}"
				 contentBackgroundAlpha="0.0" focusEnabled="false"
				 includeInLayout="{isExpanded &amp;&amp; !isanswerVisible}"
				 showEffect="{fadeEffectIn}"
				 top="5"
				 right="10"
				 left="10"
				 bottom="5"
				 location="{quesHtml}" tabChildren="false"
				 tabEnabled="false"/>
		
		<mx:HTML id="htmlAnswers" visible="{isanswerVisible}" 
				 focusEnabled="false" includeInLayout="{isanswerVisible}"
				 showEffect="{fadeEffectIn}"
				 hideEffect="{fadeEffectOut}"
				 top="5"
				 right="10"
				 left="10"
				 bottom="5"
				 includeIn="Enlarged"
				 location="{ansHtml}" mouseChildren="false"
				 layoutDirection="ltr"
				 tabChildren="false" tabEnabled="false" textAlign="left"/>
		
	
</s:BorderContainer>
