<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="1100" height="760"
					   showStatusBar="false"
					   skinClass="skin.ModifiedWindowSkin"
					   creationComplete="windowedapplication1_creationCompleteHandler(event)"
					   xmlns:view="com.Tutorial.VideoDisplay.view.*" 
					   xmlns:TopLevelViews="com.Tutorial.VideoDisplay.view.TopLevelViews.*" xmlns:view1="view.*">
	
	<fx:Script>
		<![CDATA[
			import Event.PackageSelectEvent;
			
			import adobe.utils.CustomActions;
			
			import com.Tutorial.ExtraQuestionsModule.view.TopLevelViews.ExtraQuestionsView;
			import com.Tutorial.MCQModule.Controller.MCQConstants;
			import com.Tutorial.MCQModule.view.TopLevelViews.MCQWelcomeComponent;
			import com.Tutorial.PracticeQuestionsModule.view.TopLevelViews.PracticeQuestionsView;
			import com.Tutorial.VideoDisplay.view.TopLevelViews.WelcomeScreen;
			
			import flash.display.DisplayObject;
			
			import flashx.textLayout.elements.BreakElement;
			
			import model.Package;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.VideoDisplay;
			import mx.core.mx_internal;
			import mx.effects.easing.*;
			import mx.events.FlexEvent;
			
			import org.osmf.events.MediaPlayerStateChangeEvent;
			import org.osmf.media.MediaPlayerState;
			
			import skin.ModifiedTitleBarSkin;
			import skin.ModifiedWindowSkin;
			
			import spark.components.VideoDisplay;
			import spark.components.VideoPlayer;
			
			import view.InitialWelcomeScreen;
			
			private const _aspectRatio:Number = 1.4;
			
			private var currView:Object = null;
			
			
			private var topLevelView:Dictionary = new Dictionary();

			private const xmlPath:String = "data/pkgData.xml"; 
			private const MCQScreenName:String = "mcqScreen";
			private const VideoScreenName:String = "VideoScreen";
			private const welcomeScreenName:String = "welcomeScreen";
			private const PracticeQuesScreenName:String = "PracticeQuesScreen";
			private const ExtraQuesScreenName:String = "ExtraQuesScreen";
			
			protected function windowedapplication1_creationCompleteHandler(event:FlexEvent):void
			{
				var thisHeight:int = Capabilities.screenResolutionY *0.9;
				var thisWidth:int = thisHeight * _aspectRatio;
				
				nativeWindow.width = thisWidth;
				nativeWindow.height = thisHeight;
				
				nativeWindow.x = (Capabilities.screenResolutionX - nativeWindow.width) / 2;
				nativeWindow.y = (Capabilities.screenResolutionY - nativeWindow.height) / 2 - 20;
				
				MCQConstants.appWidth = nativeWindow.width;
				MCQConstants.appHeight = nativeWindow.height;
				
				
				((this.skin as ModifiedWindowSkin).titleBar.skin as ModifiedTitleBarSkin).addEventListener("HomebuttonClicked", showHomeScreen, false, 0, true);
				showHomeScreen(null);
				
				
			}
			
			protected function showPracticeQuestionsScreen():void
			{
				if(currView)
					currView.disposeView();
				
				if(topLevelView[PracticeQuesScreenName] == null)
				{
					var welScreen:PracticeQuestionsView = new PracticeQuestionsView;
					topLevelView[PracticeQuesScreenName] = welScreen;
				}
				else
				{
					(topLevelView[PracticeQuesScreenName] as PracticeQuestionsView).disposeView();
					(topLevelView[PracticeQuesScreenName] as PracticeQuestionsView)._initView();
				}
				
				
				this.removeAllElements();
				this.addElement(topLevelView[PracticeQuesScreenName] as PracticeQuestionsView);

				currView = topLevelView[PracticeQuesScreenName];

			}
			
			protected function showExtraQuestionsScreen():void
			{
				if(currView)
					currView.disposeView();
				
				if(topLevelView[ExtraQuesScreenName] == null)
				{
					var welScreen:ExtraQuestionsView = new ExtraQuestionsView;
					topLevelView[ExtraQuesScreenName] = welScreen;
				}
				else
				{
					(topLevelView[ExtraQuesScreenName] as ExtraQuestionsView).disposeView();
					(topLevelView[ExtraQuesScreenName] as ExtraQuestionsView)._initView();
				}
				
				this.removeAllElements();
				this.addElement(topLevelView[ExtraQuesScreenName] as ExtraQuestionsView);

				currView = topLevelView[ExtraQuesScreenName];

			}
			
			protected function showHomeScreen(ev:Event):void
			{
				if(currView)
					currView.disposeView();
				
				if(topLevelView[welcomeScreenName] == null)
				{
					var initWelcomeScreen:InitialWelcomeScreen = new InitialWelcomeScreen;
					topLevelView[welcomeScreenName] = initWelcomeScreen;
					initWelcomeScreen.populateData(xmlPath);
					initWelcomeScreen.addEventListener("newPackageStarted", onPackageSelection, false, 0, true);

				}
				else
				{
					(topLevelView[welcomeScreenName] as InitialWelcomeScreen).disposeView();
				}
				
				this.removeAllElements();
				this.addElement(topLevelView[welcomeScreenName] as InitialWelcomeScreen);
				currView = topLevelView[welcomeScreenName];

			}
			
			private function showVideoScreen(subject:String):void
			{
				if(currView)
					currView.disposeView();

				if(topLevelView[MCQScreenName] == null)
				{
					var welScreen:WelcomeScreen = new WelcomeScreen;
					topLevelView[VideoScreenName] = welScreen;
				}
				else
				{
					(topLevelView[VideoScreenName] as WelcomeScreen).disposeView();
				}
				
				this.removeAllElements();
				this.addElement(topLevelView[VideoScreenName] as WelcomeScreen);
				currView = topLevelView[VideoScreenName];
				(topLevelView[VideoScreenName] as WelcomeScreen).showScreen(subject);

			}
			
			private function showMCQScreen():void
			{
				if(currView)
					currView.disposeView();
				
				if(topLevelView[MCQScreenName] == null)
				{
					var mcqScreen:MCQWelcomeComponent = new MCQWelcomeComponent;
					topLevelView[MCQScreenName] = mcqScreen;
				}
				else
				{
					(topLevelView[MCQScreenName] as MCQWelcomeComponent).disposeView();
					(topLevelView[MCQScreenName] as MCQWelcomeComponent).initWithData(MCQConstants.testBaseFolder, MCQConstants.levelXml);
				}

				this.removeAllElements();
				this.addElement(topLevelView[MCQScreenName] as MCQWelcomeComponent);
				currView = topLevelView[MCQScreenName];
				(topLevelView[MCQScreenName] as MCQWelcomeComponent).showWelcomeScreen(null);

			}

			protected function onPackageSelection(ev:PackageSelectEvent):void
			{
				switch(ev.pkgEntity.pkgID)
				{
					case "maths":
					{
						showVideoScreen("maths");
						
						break;
					}
						
					case "science":
					{
						showVideoScreen("science");
						break;

					}
						
					case "MCQ":
					{
						showMCQScreen()
						break;
					}
						
					case "Extra Questions":
					{
						showExtraQuestionsScreen();
						break;
					}
						
					case "Practice Questions":
					{
						showPracticeQuestionsScreen();
						break;
					}

					default:
					{
						break;
					}
				}
			}
			
		]]>
	</fx:Script>
	<!--
	<s:VGroup width="100%" height="100%">
		<view1:TopWindowBar width="100%" height="50"/> 
		<mx:ViewStack width="100%" height="100%" id="view_stack"/>
	</s:VGroup>-->
	
</s:WindowedApplication>
