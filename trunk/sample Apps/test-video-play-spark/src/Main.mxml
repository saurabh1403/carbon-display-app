<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   width="1100" height="750"
					   creationComplete="windowedapplication1_creationCompleteHandler(event)">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import Events.VideoPlayerEvent;
			
			import adobe.utils.CustomActions;
			
			import caurina.transitions.Tweener;
			
			import flash.display.DisplayObject;
			
			import mx.controls.Alert;
			import mx.controls.VideoDisplay;
			import mx.events.FlexEvent;
			
			import org.osmf.events.MediaPlayerStateChangeEvent;
			import org.osmf.media.MediaPlayerState;
			
			import spark.components.VideoDisplay;
			import spark.components.VideoPlayer;
			public var con:NetConnection;
			
			public var vidSrc:String = "assets/test1.flv";
			
			protected function testFn(event:VideoPlayerEvent):void
			{
				var videoWidth:uint = vid.width;
				var videoHeight:uint = vid.height;
				
				switch(event.eventTargetComponent)
				{
					case "fullScreenButton":
						
						if(event.eventTargetValue == 0)
						{
							Tweener.addTween(this.vid, {width: 850, 
								height: 650, time: 2});
							currentState = "StandardScreenState";
						}
						else
						{
							Tweener.addTween(this.vid, {width: this.width - 20, 
								horizontalCenter: 0, verticalCenter: 0, 
								
								transition: "easeOutQuad",
								height: this.height - 20, time: 2});
							currentState = "FullScreenState";
						}
					
						break;
					
					default:
						break;
				}
			}
			
			protected function windowedapplication1_creationCompleteHandler(event:FlexEvent):void
			{
				vid.skin.addEventListener("testEvent", testFn, false, 0, true);
				//				var vid:VideoPlayer = new VideoPlayer();
				//				vid.width = 800;
				//				vid.height = 600;
				//				vid.source = "assets/v1.mp4";
				//
				//				vid.videoObject.smoothing = true;
				//				vid.videoObject.deblocking = 0;
				//								
				//				this.addElement(vid);
				
				//				con = new NetConnection();
				//				con.addEventListener(NetStatusEvent.NET_STATUS, f1);
				//				con.connect(null);
			}
			
			protected function f1(event:NetStatusEvent):void
			{
				var ns:NetStream = new NetStream(con);
				
				var vv:Video = new Video(1000, 900);
				vv.smoothing = true;
				vv.deblocking = 0;
				vv.attachNetStream(ns);
				
				ns.play(vidSrc);
			}
			
			protected function vid_mediaPlayerStateChangeHandler(event:MediaPlayerStateChangeEvent):void
			{
				//				return;
				if(event.state == MediaPlayerState.READY)
				{
					vid.videoObject.smoothing = true;
					vid.videoObject.deblocking = 0;
				}
			}
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="StandardScreenState"/>
		<s:State name="FullScreenState" />
	</s:states>
	
	<s:HGroup left="15" right="15" top="10" bottom="10" width="100%" height="100%"
			  contentBackgroundColor="#FDFCFC">
		
		<s:VGroup width="100%" height="100%">
			
			<s:Spacer height="10%" includeIn="StandardScreenState"/>

			<s:VideoPlayer id="vid" visible="true" left="10" top="10" width="100%" height="100%"
						   right.FullScreenState="10" bottom.FullScreenState="10"
						   maxWidth.StandardScreenState="850" maxHeight.StandardScreenState="650" 
						   mediaPlayerStateChange="vid_mediaPlayerStateChangeHandler(event)"
						   skinClass="PlayerSkin"
						   source="{vidSrc}"
						   />
			
		</s:VGroup>
		<s:Spacer width="15" includeIn="StandardScreenState"/>
		
		<s:BorderContainer right="10" top="10" bottom="10" width="1%" dropShadowVisible="true" focusEnabled="false"
						   includeIn="StandardScreenState"
						   >
			
			<s:List id="subTopicsList" width="100%" height="100%" focusEnabled="false"></s:List>
		</s:BorderContainer>
	</s:HGroup>
	
</s:WindowedApplication>
