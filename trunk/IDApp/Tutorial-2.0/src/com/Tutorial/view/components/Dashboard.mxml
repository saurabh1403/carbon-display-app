<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%"
		 backgroundAlpha="0" xmlns:widgets="com.Tutorial.view.widgets.*"
		 creationComplete="dashboard_creationComplete(event)" xmlns:components="com.Tutorial.view.components.*"
		 xmlns:accordionLayout = "imports.Accordion3D.com.rialvalue.layouts.*"
		 xmlns:accordion = "imports.Accordion3D.*"
		 >
	<!--backgroundColor="0x888888"-->
	<fx:Script>
		<![CDATA[

			import com.Tutorial.ApplicationFacade;
			import com.Tutorial.Events.PackageSelectEvent;
			import com.Tutorial.business.NativeCommunicator;
			import com.Tutorial.business.TutConstants;
			import com.Tutorial.model.PackageProxy;
			import com.Tutorial.model.objects.Package;
			
			import imports.Accordion3D.com.rialvalue.layouts.Accordion3DLayout;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			
			[Bindable] 
			private var packageMainIconPath:String = "";
			
			[Bindable]
			public static var listHorizontalColumnCount:int = 2;
			
			[Bindable]
			public var pkgColl:ArrayCollection;
			
			[Bindable]
			public var dataProvider:ArrayCollection;

			private var currSelectedPkg:com.Tutorial.model.objects.Package = null;
			
			var currLayout:Accordion3DLayout = new Accordion3DLayout();

			private var pkgProxy:PackageProxy = ApplicationFacade.getInstance().retrieveProxy(PackageProxy.NAME) as PackageProxy;
			
			protected function tileComponent_clickHandler(event:MouseEvent):void
			{
				if(tileComponent.selectedItem == null)
					return;
				
				ApplicationFacade.getInstance().sendNotification(TutConstants.N_CREATENAVPANEL);
				ApplicationFacade.getInstance().sendNotification(TutConstants.N_SETNAVPANELVISIBILITY, "true");
				
				//1. start session based on the content user selected
				//2. make a call to get session data
				var proxy:PackageProxy = ApplicationFacade.getInstance().retrieveProxy(PackageProxy.NAME) as PackageProxy;
				var pkg:com.Tutorial.model.objects.Package = proxy.getPkgOfSession(tileComponent.selectedItem.pkgID);
				
				if(!pkg.bAlreadyPopulated)
					NativeCommunicator.instance.startSession(tileComponent.selectedItem.pkgID);
				else
				{
					ApplicationFacade.getInstance().sendNotification(TutConstants.N_PARAMSCONFIGURED, tileComponent.selectedItem.pkgID);
				}
				tileComponent.selectedItem = null;
			}
			
			
			protected function leftBtn_clickHandler(event:MouseEvent):void
			{
				var pos:int = tileComponent.horizontalScrollPosition-1;
				var min:int = 0;
				var value:int = Math.max(min, pos);
				tileComponent.horizontalScrollPosition = value;
				
				if(value == 0)
					leftBtn.enabled = false;
				else
					leftBtn.enabled = true;
				
				//if(pkgColl.length >= listHorizontalColumnCount)
				rightBtn.enabled = true;
			}
			
			
			protected function rightBtn_clickHandler(event:MouseEvent):void
			{
				var pos:int = tileComponent.horizontalScrollPosition+1;
				var max:int = tileComponent.maxHorizontalScrollPosition;
				var value:int = Math.min(pos, max);
				tileComponent.horizontalScrollPosition = value;
				
				if(value == max)
					rightBtn.enabled = false;
				else
					rightBtn.enabled = true;
				
				//if(max >= pkgColl.length)
				leftBtn.enabled = true;
				/*
				// TODO Auto-generated method stub
				var n:int = tileComponent.horizontalScrollPosition;
				var imgWid:int = tileComponent.width/2;
				
				tileComponent.horizontalScrollPosition = (n % imgWid) + 1 < pkgColl.length - 1 ? ((n % imgWid) + 1)*imgWid : (pkgColl.length - 1) * imgWid;
				*/
			}
			
			
			protected function leftBtn_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(leftBtn.enabled)
					leftBtn.source = "/assets/icons/leftarrow-32_hover.png";
			}
			
			
			protected function leftBtn_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				leftBtn.source = "/assets/icons/leftarrow-32.png";
			}
			
			
			protected function rightBtn_mouseOverHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				if(rightBtn.enabled)
					rightBtn.source = "/assets/icons/rightarrow-32_hover.png";
			}
			
			
			protected function rightBtn_mouseOutHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				rightBtn.source = "/assets/icons/rightarrow-32.png";
			}
			
			protected function updatePackageThumbnails():void
			{
				this.addEventListener(PackageSelectEvent.eventName, newPackageSelected);
				
				dataProvider = new ArrayCollection();
				dataProvider.disableAutoUpdate();
				
				for (var i:int = 1; i <= 6; i++)
				{
					dataProvider.addItem("imports/Accordion3D/assets/photo_" + i.toString() + ".jpg");
				}
				
				dataProvider.enableAutoUpdate();
				
			}

			protected function newPackageSelected(event:PackageSelectEvent):void
			{
				var tmpSelectedPkg = pkgProxy.getPkgOfSession(event.pkg_id);
				if(tmpSelectedPkg != currSelectedPkg)
				{
					currSelectedPkg = tmpSelectedPkg;
					packageMainIconPath = currSelectedPkg.mainIconPath;
					currLayout.selectedIndex = pkgProxy.packages.getItemIndex(currSelectedPkg);
//					Alert.show(event.pkg_id, "hello world");
				}
			}

			protected function dashboard_creationComplete(event:FlexEvent):void
			{
				updatePackageThumbnails();
				this.addEventListener(PackageSelectEvent.eventName, newPackageSelected);
				
			}
			
		]]>
	</fx:Script>
	
	<mx:VBox width="100%" height="100%">
		<mx:Spacer height="5%"/>
		
		<mx:HBox width="100%" height="100%">
			<mx:Spacer width="10%"/>
			<mx:VBox width="100%">
				<mx:Text width="70%" styleName="titleHeader"
						 text="Available Courses"
						 tabFocusEnabled="false" selectable="false"/>
				<widgets:LightHRule width="80%" id="lightrule"
									strokeWidth="1" strokeColor="0xffffff" strokeOpacity=".4" />
				<mx:Text width="70%" styleName="titleHeader"
						 text="Please select a course"
						 color="0xffc90e"
						 tabFocusEnabled="false" selectable="false"/>
				
				<mx:Spacer height="5%"/>
				
				<!-- 3D accordion control -->
				<components:PackageListAccordion3D id="pktAccordList"
												   dataProvider="{pkgColl}"
												   layout="{currLayout}"/>				
				
				<mx:TileList width="{lightrule.width}" height="100%" id="tileComponent"
							 dataProvider="{pkgColl}"
							 itemRenderer="com.Tutorial.view.components.renderers.courseLayoutIRenderer"
							 click="tileComponent_clickHandler(event)"
							 borderStyle="none" horizontalScrollPolicy="off"
							 columnCount="{listHorizontalColumnCount}" maxColumns="{listHorizontalColumnCount}"
							 selectionColor="0x404040"
							 rollOverColor="0xffc90e"
							 />
				
				<mx:Spacer width="10%"/>
			</mx:VBox>
			<mx:Spacer width="10%"/>
		</mx:HBox>
		
		<mx:HBox width="100%" height="0"
				 visible="false" includeInLayout="false">
			<mx:Spacer width="10%"/>
			
			<mx:VBox height="100%">
				<mx:Spacer height="100%"/>
				<mx:Image id="leftBtn" click="leftBtn_clickHandler(event)"
						  source="/assets/icons/leftarrow-32.png"
						  mouseOver="leftBtn_mouseOverHandler(event)"
						  mouseOut="leftBtn_mouseOutHandler(event)"
						  enabled="false"						  
						  />
				<mx:Spacer height="100%"/>
			</mx:VBox>
			<mx:HorizontalList width="100%" height="100%" id="tileComponent1"
							   dataProvider="{pkgColl}"
							   itemRenderer="com.Tutorial.view.components.renderers.courseLayoutIRenderer"
							   click="tileComponent_clickHandler(event)"
							   borderStyle="none" columnCount="{listHorizontalColumnCount}"
							   horizontalScrollPolicy="off"
							   />
			<mx:VBox height="100%">
				<mx:Spacer height="100%"/>
				<mx:Image id="rightBtn" click="rightBtn_clickHandler(event)"
						  source="/assets/icons/rightarrow-32.png"
						  mouseOver="rightBtn_mouseOverHandler(event)"
						  mouseOut="rightBtn_mouseOutHandler(event)"
						  />
				<mx:Spacer height="100%"/>
			</mx:VBox>
			
			<mx:Spacer width="10%"/>
		</mx:HBox>
		<mx:Spacer height="10%"/>
	</mx:VBox>
	
</mx:VBox>
