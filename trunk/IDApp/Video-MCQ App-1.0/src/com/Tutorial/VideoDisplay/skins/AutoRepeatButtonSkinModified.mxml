<?xml version="1.0" encoding="utf-8"?>

<!--

    ADOBE SYSTEMS INCORPORATED
    Copyright 2008 Adobe Systems Incorporated
    All Rights Reserved.

    NOTICE: Adobe permits you to use, modify, and distribute this file
    in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark ToggleButton component.  

     @see spark.components.ToggleButton
        
      @langversion 3.0
      @playerversion Flash 10
      @playerversion AIR 1.5
      @productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
                   xmlns:s="library://ns.adobe.com/flex/spark" 
                   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
                   minWidth="21" minHeight="21" 
                   alpha.disabledStates="0.5">
    
    <!-- host component -->
    <fx:Metadata>
    <![CDATA[ 
        /** 
         * @copy spark.skins.spark.ApplicationSkin#hostComponent
         */
        [HostComponent("spark.components.ToggleButton")]
    ]]>
    </fx:Metadata>
    
    <fx:Script fb:purpose="styling">
        /* Define the skin elements that should not be colorized. 
           For toggle button, the graphics are colorized but the label is not. */
        static private const exclusions:Array = ["labelDisplay"];

        /**
         * @private
         */    
        override public function get colorizeExclusions():Array {return exclusions;}
        
        /**
         * @private
         */
        override protected function initializationComplete():void
        {
            useChromeColor = true;
            super.initializationComplete();
        }
        
        private var cornerRadius:Number = 2;
    </fx:Script>
    
    <!-- states -->
    <s:states>
        <s:State name="up" />
        <s:State name="over" stateGroups="overStates" />
        <s:State name="down" stateGroups="downStates" />
        <s:State name="disabled" stateGroups="disabledStates" />
        <s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
        <s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
        <s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
        <s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
    </s:states>
    
	<!-- layer 1: fill -->
	<s:Ellipse left="1" right="1" top="1" bottom="1">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry alpha="0"
								 color.overStates="0xFFFFFF" alpha.overStates="0.2"
								 color.downStates="0xF7F0F0" alpha.downStates="0.4" />
				<s:GradientEntry alpha="0"
								 color.overStates="0x92B88C" alpha.overStates="0.2"
								 color.downStates="0x7BA374" alpha.downStates="0.4"/>
			</s:LinearGradient>
		</s:fill>
	</s:Ellipse>
	
	<s:Ellipse left="1" right="1" top="1" bottom="1" includeIn="selectedStates">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry alpha="0.3"/>
				<s:GradientEntry alpha="0.6"/>
			</s:LinearGradient>
		</s:fill>
	</s:Ellipse>
	
	<!-- layer 2: One pixel stroke inside border (exclude in downStates) -->
	<s:Ellipse left="1" right="1" top="1" bottom="1">
		<s:stroke>
			<s:LinearGradientStroke weight="1" rotation="90">
				<s:GradientEntry color.downStates="0xEDEADF" color.overStates="0x8E9E63" alpha.overStates="0.8" alpha.downStates="0.4" alpha="0"/>
			</s:LinearGradientStroke>
		</s:stroke>
	</s:Ellipse>
	
	
	<!-- layer 5: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
	<s:Ellipse left="0" right="0" top="0" bottom="0" width="38" height="24" visible="false">
		<s:stroke>
			<s:SolidColorStroke color="0x131313" />
		</s:stroke>
	</s:Ellipse>
	
	<s:Group horizontalCenter="0" verticalCenter="0" id="repeatSymbol"
			 left="1" top="1" right="1" bottom="1" 
			 >
		<s:Image source="@Embed('assets/assetsVideoDisplay/repeat.png')"
				 smooth="true"
				 smoothingQuality="high"
				 scaleMode="stretch"
				 width="90%" height="90%"
				 horizontalCenter="0" verticalCenter="0"
				 />
		
	</s:Group>
	
	<!--- Defines the mute symbol. -->

	<s:Group horizontalCenter="0" verticalCenter="0" 
			 includeIn="selectedStates" id="muteSymbol"
			 left="1" top="1" right="1" bottom="1"
			 visible="false"
			 >
	
		<s:Image source="@Embed('assets/assetsVideoDisplay/mute.png')"
				 smooth="true"
				 smoothingQuality="high"
				 scaleMode="stretch"
				 width="90%" height="90%"
				 horizontalCenter="0" verticalCenter="0"
				 />
	</s:Group>
	
</s:SparkButtonSkin>
