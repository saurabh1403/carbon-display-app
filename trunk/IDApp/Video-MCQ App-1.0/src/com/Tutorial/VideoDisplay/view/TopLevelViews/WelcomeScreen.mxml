<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" 
		 width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import adobe.utils.CustomActions;
			
			import com.Tutorial.VideoDisplay.Controller.DataParser;
			import com.Tutorial.VideoDisplay.Events.GenericEvent;
			import com.Tutorial.VideoDisplay.Events.VideoOptionsClickEvent;
			import com.Tutorial.VideoDisplay.Events.VideoPlayerEvent;
			import com.Tutorial.VideoDisplay.Events.VideoSelectionChangeEvent;
			import com.Tutorial.VideoDisplay.model.DataEntity;
			import com.Tutorial.VideoDisplay.model.VideoPlayConstants;
			import com.Tutorial.VideoDisplay.view.TopLevelViews.Level1VideoDisplay;
			import com.Tutorial.VideoDisplay.view.TopLevelViews.WelcomeScreen;
			
			import flash.display.DisplayObject;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.controls.VideoDisplay;
			import mx.core.mx_internal;
			import mx.effects.easing.*;
			import mx.events.FlexEvent;
			
			import org.osmf.events.MediaPlayerStateChangeEvent;
			import org.osmf.media.MediaPlayerState;
			
			import spark.components.VideoDisplay;
			import spark.components.VideoPlayer;
			
			private const _aspectRatio:Number = 1.4;
			
			private var currView:Object = null;
			
			public function disposeView():void
			{
				if(currView != null)
					(currView as Level1VideoDisplay).resetView();
				
				this.removeAllElements();
				currView = null;
			}
			
			protected function windowedapplication1_creationCompleteHandler(event:FlexEvent):void
			{
				
			}
			
			public function showScreen(str:String):void
			{
				var newEv:GenericEvent = new GenericEvent(VideoPlayConstants.subjectSelectionEvent);
				newEv.eventData.subjectName = str;
				onSubjectSelection(newEv);

			}
			
			protected function onVideoSelectionChange(ev:VideoSelectionChangeEvent):void
			{
				var i:int = ev.selectedDataIndex;
				var videoScr:Level1VideoDisplay = currView as Level1VideoDisplay;
				videoScr.playCurrentSelectedVideo(i);
			}
			
			protected function onSubjectSelection(event:GenericEvent):void
			{
				var _dataParser:DataParser = null;
				switch(event.eventData.subjectName)
				{
					case "maths":
						_dataParser = new DataParser(VideoPlayConstants.testBaseFolderPath, VideoPlayConstants.relativeMathsXmlPath, VideoPlayConstants.relativeContentPath, VideoPlayConstants.relativeResourcePath);
						break;

					case "science":
						_dataParser = new DataParser(VideoPlayConstants.testBaseFolderPath, VideoPlayConstants.relativeScienceXmlPath, VideoPlayConstants.relativeContentPath, VideoPlayConstants.relativeResourcePath);
						default:
							break;
				}
				
				var dataArrayColl:ArrayCollection = new ArrayCollection;
				if(!_dataParser.populateDataEntityFromXml(dataArrayColl))
				{
					Alert.show("Error in parsing xml. Reinstall the application");
				}
				else
				{
					showVideoScreen(dataArrayColl);
				}
			}
			
			private function showVideoScreen(dataArrayColl:ArrayCollection):void
			{
				var videoScreen:Level1VideoDisplay = new Level1VideoDisplay;
				videoScreen.videoItemsList = dataArrayColl;
				videoScreen.addEventListener(VideoPlayConstants.videoSelectChangeEvent, onVideoSelectionChange, false, 0, true);
				this.removeAllElements();
				this.addElement(videoScreen);
				currView = null;
				currView = videoScreen;
			}
			
		]]>
	</fx:Script>

</s:Group>
